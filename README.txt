Irtiqa is a text-based adventure game which allows you to navigate through a small world as an animal. Your ultimate goal in this game is to become dominant over all other animals in this world. Do so, and you win. As you interact more and more with the world, you will accumulate experience, tools, and abilities that will aid you in your quest for dominance. Use your experience points to 'evolve' progressively into a more and more powerful (or charming) animal.
You will interact with the world using text commands (e.g., "go north" or "eat fruit"). This will also involve interacting with other animals in the world; whether these interactions are friendly or hostile is up to you. You may attempt to befriend animals, or you may attack them. The game world is dynamic: the weather changes frequently, and new creatures are born regularly where old ones have died.

OUR IMPROVEMENTSâ€”Estimated total points: 66
 - "me" command (2 points): We have included both a "me" command, which lets the player see their most important stats, and an "allstats" command, which lets the player see a comprehensive list of their stats. These commands call the methods stats and allstats of the Player class, respectively, located in Player.py.
 - bigger world (2 points): Our game has a 9x9 map of Square objects, our game's equivalent of rooms. This map is generated by the makeMap method of the World class, found in World.py. At the beginning of each turn, players see a description of the terrain of the square they're in, as well as whether or not that square has items or a creature in it.
 - "inspect" command (2 points): We have added an inspect command for use on either creatures or items. When used on a creature, it tells the player that creature's stats. When used on an item, it describes the item's function. The "inspect" command calls the inspect method of the Player class.
 - limited inventory (2 points): Each item in the game has a weight, and the player is limited in both the quantity and the weight of items they can carry. However, the player can upgrade their weight limit and their inventory capacity using the evolve method of the Player class.
 - "drop" command (2 points): We have added a "drop" command so that a player can drop items. The "drop" command calls the drop method of the Player class.
 - weapons (2 points): Not weapons per se, but there are certain items that the player can use during encounters with other creatures that help the player to defeat or befriend them.
 - healing items (2 points): Food and the item "healing salve" both heal the player. Additionally, the different types of food heal the player to different degrees.
 - item stacking (2 points): There is item stacking both when listing the items in the player's inventory (in the showInventory method of the Player class) and when listing the items in the player's location (in the printSituation function of Main.py).
 - introducing monsters during play (2 points): New monsters appear every five turns. This is accomplished in the update method of the World class.
 - "wait" command (2 points): The player can wait any number of turns. The code for this is in Main.py.
 - regeneration (2 points): The player regenerates stats when they are at their home base. Additionally, terrain and weather effects can damage the player's stats over time (which is akin to negative regeneration). These effects are carried out in the update method of the Player class.
 - victory conditions (3 points): There are three ways to beat the game: by defeating 20 creatures, by befriending 20 creatures, or by unlocking "fire" from the upgrade store.
 - random world (3 points): The world is entirely random. The terrain is random (implemented in the makeMap method of the World class), the distribution of items is random (in Main.py), and the distribution of creatures is random (in Main.py).
 - loot (3 points): Whenever the player defeats or befriends a creature, there is a 15% chance that it will drop a random item. This is implemented in the attack, befriend and flexibleResponse methods of the Player class.
 - more monsters (3 points): There are several different types of creatures that can be encountered. Each has different stats, and some creatures only appear in the "lake" terrain. In Creature.py, there is one Creature class, and then numerous specific subclasses of Creature; it is through these subclasses that the different creature types are implemented.
 - special rooms (3 points): There is one "home" square, where the Player's health increases. Additionally, there is a terrain attribute of the Square class, and each terrain has a different effect on the player. The effects of both the "home" square and the different terrains are implemented in the update method of the Player class.
 - player attributes (3 points): Players have a number of attributes, including a hunger attribute, a strength attribute (which determines how much damage the player does in combat), a sociability attribute (which determines how well the player befriends other creatures), a speed attribute (which determines whether the player or the other creature goes first in an encounter), an intelligence attribute (which unlocks new upgrades in the upgrade store), and an experience attribute (which keeps track of the points used to buy upgrades).
 - command abbreviations (2 points): The game accepts some abbreviations/variations in spelling off the bat, but players can also set custom abbreviations for each command using the "abbreviate" command (found in Main.py).
 - helper (2 points): After the player has befriended a creature, they can recruit them as an ally. This ally will help during encounters with other creatures (be they friendly or hostile). However, the player cannot control how exactly their ally behaves.
 - currency (4 points): The currency of this game is experience points (tracked in the experience attribute of the Player class). Experience points are acquired by defeating or befriend other creatures, and are used to purchase upgrades through the "evolve" command.
 - leveling up (4 points): In our game, the player "levels up" through the upgrade store. The player acquires experience points during gameplay, and they use these points to purchase upgrades through the "evolve" command (implemented through the evolve method of the Player class). These upgrades include both stat increases and passive abilities that aid gameplay.
 - map (5 points): At any time, the player can pull up a map that displays all the squares on the grid. The map says where the player is and where the player's home is, and gives the terrain of each square.
- locked doors (3 points): Squares that have 'lake' terrain are inaccessible to the player until they purchase the semiaquatic upgrade from the upgrade store. At that point, the player is able to access lake terrain.
- locked chests (3 points): In squares with 'forest' terrain, all items are stuck in trees. The player cannot access these items unless they have a stick in their inventory.
- events (3 points): The world class has a weather attribute. This attribute changes randomly every 5 turns, and each type of weather affects the player differently.
